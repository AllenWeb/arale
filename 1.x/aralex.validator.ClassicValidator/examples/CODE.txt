//HTML
//注意表单的DOM结构有比较严格的要求，特别是默认的class name，如果要使用自定义的className，需要通过配置告诉组件，否则无法生效。
<form id="validate-form">
    <fieldset>
    <legend>表单标题</legend>
    <div class="ui-fm-item">
        <label class="ui-fm-label" for="name">name：(*)</label>
        <input id="name" placeholder="Shawn" name="name" type="text" />
        <div class="ui-fm-explain">长度在2-8之间</div>
    </div>
    <div class="ui-fm-item">
        <label class="ui-fm-label" for="email">emaii：(*)</label>
        <input placeholder="请填写email信息" id="email" name="email" type="text" />
        <div class="ui-fm-explain">不超过10位的email</div>
    </div>
    <div class="ui-fm-item">
        <label class="ui-fm-label" for="phone">mobile：</label>
        <input id="phone" name="phone" type="text" ui-fm-explain="" />
        <div class="ui-fm-explain">请输入11位手机号</div>
    </div>
    <div class="ui-fm-item">
        <label class="ui-fm-label" for="information">information：</label>
        <textarea id="information" placeholder="b不要超过200个字符" name="information">alsgjl</textarea>
        <div class="ui-fm-explain">输入一些东西</div>
    </div>
    <div class="ui-fm-item">
        <label class="ui-fm-label" for="website">website：</label>
        <input id="website" name="website" type="text" />
        <div class="ui-fm-explain">2-50个字符之间</div>
    </div>
    <div class="ui-fm-item">
        <label class="ui-fm-label" for="">性别：(*)</label>
        <label for="boy">男</label><input type="radio" id="boy" name="gender" value="boy" />
        <label for="girl">女</label><input type="radio" id="girl" class="marginLeft" name="gender" value="girl"/>
        <div class="ui-fm-explain">必填</div>
    </div>
    <div class="ui-fm-item">
        <label class="ui-fm-label" for="">爱好：(*)</label>
        <label for="1">1</label><input type="checkbox" id="1" name="hobby" value="1" />
        <label for="2">2</label><input type="checkbox" id="2" class="marginLeft" name="hobby" value="2"/>
        <label for="3">3</label><input type="checkbox" id="3" class="marginLeft2" name="hobby" value="3"/>
        <div class="ui-fm-explain">必填</div>
    </div>
    <button type="submit">提交</button>
    <div class="fn-hide ui-fm-status">正在提交中</div>
    </fieldset>
</form>

//JS
Loader.use('aralex.validator.ClassicValidator', function() {
    var validator = new aralex.validator.ClassicValidator({
        formId: "validate-form",
        triggerMethod: [/*"keyup", "focus", "blur"*/"blur"],
        //checkNull:true,
        rules: {
            "input[name='name']": {
                type: ['requiredText', "alpha", ["lengthBetween", 2, 8]],
                desc: "姓名"
            },
            "input[name='email']": {
                type: ["requiredText", "email", ["maxLength", 10], ["post", "./php/check.php", function(obj){return obj.valid}, function(obj){return "如果不是abc@g.cn是不会过的哦"}]],
                desc: "email"
            },
            "input[name='phone']": {
                type: ["cnMobile"]
            },
            "textarea[name='information']": {
                type: [["maxLength", 100]],
                desc: "信息"
            },
            "input[name='website']": {
                type: [["lengthBetween", 2, 50]]
            },
            "input[name='gender']": {
                type: ["requiredRadio"],
                desc: "性别"
            },
            "input[name='hobby']": {
                type: ["requiredCheckbox"]
            }
        },
        afterValidate: function() {
            //console.log("afterValidate", arguments);
        },
        afterValidateAll: function() {
            //console.log("afterValidateAll", arguments);
        },
        onSuccess: function() {
           //console.log("success");
           //this.stop();
           //this.submit();
        },
        onFail: function() {
            //console.log("fail");
        },
        checkOnSubmit: true,
        stopSubmit: false,
        beforeSubmit: function() {
           alert("beforeSubmit");
        }/*,
        customAfterValidate: function(ele, bValid, errorMsg) {
            ele = ele.node || ele;
            if(ele == $('email').node) {
                alert(bValid);
            } else {
                this.defaultAfterValidate.apply(this, arguments);
            }
        }
        */

    });
    /*
    validator.unbind();
    setTimeout(arale.hitch(validator, function(){
        this.bind();
    }), 3000);
    */
});

